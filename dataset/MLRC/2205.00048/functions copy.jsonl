{"paper_id": "2205.00048", "func_id": "0", "file": "src/utils/evaluation_functions/fairness_metrics.py", "name": "II_F", "header_line": "4", "line_start": "5", "line_end": "15", "relevant_paper": "We refer to the expected exposure $\\mathsf{E}$\ncorresponding to a stochastic ranking policy $\\pi$ as determined by a\nretrieval system as *system exposure*. Similarly, *target exposure* is\ndefined as the expected exposure $\\mathsf{E}^*$ corresponding to an\nideal stochastic ranking policy $\\pi^*$, whose behavior may be dictated\nby some desirable principle, such as the *equal expected exposure\nprinciple*. The II-F metric, previously proposed by @diaz2020evaluating, measures\nthe disparity between the system and target exposure at the level of\nindividual users and individual items. Using similar notations as\nbefore, we have:\n\n$$\\begin{aligned}\n\\textbf{II-F} &=\\frac{1}{|\\mathcal{D}|}\\frac{1}{|\\mathcal{U}|}\\sum_{d\\in \\mathcal{D}}\\sum_{u\\in \\mathcal{U}}\\left(p(\\epsilon|d, u)-p^*(\\epsilon|d, u)\\right)^2 \\label{eqn:metric-iif1} \\\\\n&= \\frac{1}{|\\mathcal{D}|}\\frac{1}{|\\mathcal{U}|}\\sum_{j=1}^{|\\mathcal{D}|}\\sum_{i=1}^{|\\mathcal{U}|}(\\mathsf{E}_{ij}-\\mathsf{E}^*_{ij})^2. \\label{eqn:metric-iif2}\n\\end{aligned}$$\n\nFor notational brevity, let\n$\\mathsf{E}^\\delta_{ij} = \\mathsf{E}_{ij}-\\mathsf{E}^\\sim_{ij}$ and\n$\\mathsf{E}^\\Delta_{ij} = \\mathsf{E}^*_{ij}-\\mathsf{E}^\\sim_{ij}$. Based\non [\\[eqn:metric-iif3\\]](#eqn:metric-iif3){reference-type=\"ref\"\nreference=\"eqn:metric-iif3\"}, we now redefine II-D and II-R as:\n\n$$\\begin{aligned}\n    \\textbf{II-D} &= \\frac{1}{|\\mathcal{D}|}\\frac{1}{|\\mathcal{U}|}\\sum_{j=1}^{|\\mathcal{D}|}\\sum_{i=1}^{|\\mathcal{U}|}{\\mathsf{E}^\\delta}_{ij}^2 \\label{eqn:metric-iid} \\\\\n    \\textbf{II-R} &= \\frac{1}{|\\mathcal{D}|}\\frac{1}{|\\mathcal{U}|}\\sum_{j=1}^{|\\mathcal{D}|}\\sum_{i=1}^{|\\mathcal{U}|}2{\\mathsf{E}^\\delta}_{ij}{\\mathsf{E}^\\Delta}_{ij}. \\label{eqn:metric-iir}\n\\end{aligned}$$\n\n\\textbf{II-D} &= \\frac{1}{|\\mathcal{D}|}\\frac{1}{|\\mathcal{U}|}\\sum_{j=1}^{|\\mathcal{D}|}\\sum_{i=1}^{|\\mathcal{U}|}{\\mathsf{E}^\\delta}_{ij}^2\n\n\\textbf{II-R} &= \\frac{1}{|\\mathcal{D}|}\\frac{1}{|\\mathcal{U}|}\\sum_{j=1}^{|\\mathcal{D}|}\\sum_{i=1}^{|\\mathcal{U}|}2{\\mathsf{E}^\\delta}_{ij}{\\mathsf{E}^\\Delta}_{ij}", "description": "Performs certain calculations on energy systems, targets, and collections and returns a set of metrics.\n\n:param E_system: A matrix representing the energy system values.\n:param E_target: A matrix representing the energy target values.\n:param E_collect: A matrix representing the energy collection values.\n:param batch_indicator: A matrix where 0 indicates hold-out and 1 indicates that the corresponding indexes should be considered in calculations.\n\n:effects: \n    - Prints the string literal \"initialized\".\n    - Prints the computation time with the prefix \"Time IIF: \".\n\n:return: A list containing three computed metrics:\n    - 'metric': The sum of squared differences between E_system and E_target normalized by the sum of batch_indicator.\n    - 'dis': The sum of squared E_system values normalized by the sum of batch_indicator.\n    - 'rel': Twice the sum of element-wise product of E_system and E_target normalized by the sum of batch_indicator."}
{"paper_id": "2205.00048", "func_id": "1", "file": "src/utils/evaluation_functions/fairness_metrics.py", "name": "GI_F", "header_line": "18", "line_start": "19", "line_end": "56", "relevant_paper": "Next, we introduce group attributes on the user-side which gives us the\nGI-F metric that measures the over or under exposure of individual items\nto groups of users. Similar to the way we define the IG-F metric, the\nGI-F metric can be defined as follows, where $U \\in \\mathcal{G}_u$\ndenote a group of users and $\\mathcal{G}_u$ the set of all user groups:\n\n::: small\n$$\\begin{aligned}\n\\textbf{GI-F} &=\\frac{1}{|\\mathcal{D}|}\\frac{1}{|\\mathcal{G}_u|}\\sum_{d\\in \\mathcal{D}}\\sum_{U \\in \\mathcal{G}_u}\\left(p(\\epsilon|d, U)-p^*(\\epsilon|d, U)\\right)^2 \\label{eqn:metric-gif1} \\\\\n&= \\frac{1}{|\\mathcal{D}|}\\frac{1}{|\\mathcal{G}_u|}\\sum_{j=1}^{|\\mathcal{D}|}\\sum_{U\\in \\mathcal{G}_u}\\left(\\sum_{i=1}^{|U|}p(U_i|U)(\\mathsf{E}_{ij}-\\mathsf{E}^*_{ij})\\right)^2. \\label{eqn:metric-gif2}\n\\end{aligned}$$\n:::\n\nConsequently, $p(U_i|U)$ can be defined as a uniform probability\ndistribution over all users in a group, or could be proportional to\ntheir usage of the recommender system.\n\n      \\textbf{GI-D} &= \\frac{1}{|\\mathcal{D}|}\\frac{1}{|\\mathcal{G}_u|}\\sum_{j=1}^{|\\mathcal{D}|}\\sum_{U\\in \\mathcal{G}_u}\\left(\\sum_{i=1}^{|U|}p(U_i|U){\\mathsf{E}^\\delta}_{ij}\\right)^2                                     \n\n\\textbf{GI-R} &= \\frac{1}{|\\mathcal{D}|}\\frac{1}{|\\mathcal{G}_u|}\\sum_{j=1}^{|\\mathcal{D}|}\\sum_{U\\in \\mathcal{G}_u}\\left(\\sum_{i=1}^{|U|}2p(U_i|U){\\mathsf{E}^\\delta}_{ij}{\\mathsf{E}^\\Delta}_{ij}\\right)^2", "description": "Computes metric values based on system energy and target energy modified by user labels and batch indicators.\n\n:param E_system: Tensor representing the system energy matrix.\n:param E_target: Tensor representing the target energy matrix.\n:param E_collect: Tensor subtracted from both `E_system` and `E_target`.\n:param user_label: Tensor of user labels.\n:param batch_indicator: Tensor indicating batch data.\n\n:modifies: None\n\n:effects: Prints the elapsed time under the label \"Time GIF\".\n\n:return: A list containing three computed metric values: [metric, dis, rel], where:\n         - metric: Aggregated metric value computed over all user labels.\n         - dis: Discrepancy metric value over all user labels.\n         - rel: Relevance metric value multiplied by 2 over all user labels."}
{"paper_id": "2205.00048", "func_id": "2", "file": "src/utils/evaluation_functions/fairness_metrics.py", "name": "IG_F", "header_line": "59", "line_start": "60", "line_end": "85", "relevant_paper": "IG-F metric which is concerned with whether groups of items are over or\nunder exposed to individual users. We achieve this by making couple of\nminor modifications to\n[\\[eqn:metric-iif1\\]](#eqn:metric-iif1){reference-type=\"ref\"\nreference=\"eqn:metric-iif1\"}:\n\n::: enumerate*\nreplacing $p(\\epsilon|d, u)$ and $p^*(\\epsilon|d, u)$ with\n$p(\\epsilon|D, u)$ and $p^*(\\epsilon|D, u)$, respectively, where\n$D \\in \\mathcal{G}_d$ denotes a group of items and $\\mathcal{G}_d$ is\nthe set of all item groups, and\n\naveraging the deviations across groups of items instead of individual\nitems.\n:::\n\n::: small\n$$\\begin{aligned}\n\\textbf{IG-F} &= \\frac{1}{|\\mathcal{G}_d|}\\frac{1}{|\\mathcal{U}|}\\sum_{D \\in \\mathcal{G}_d}\\sum_{u \\in \\mathcal{U}}\\left(p(\\epsilon|D, u)-p^*(\\epsilon|D, u)\\right)^2 \\label{eqn:metric-igf1} \\\\\n&= \\frac{1}{|\\mathcal{G}_d|}\\frac{1}{|\\mathcal{U}|}\\sum_{D \\in \\mathcal{G}_d}\\sum_{i=1}^{|\\mathcal{U}|}\\left(\\sum_{j=1}^{|D|}p(D_j|D)(\\mathsf{E}_{ij}-\\mathsf{E}^*_{ij})\\right)^2. \\label{eqn:metric-igf2}\n\\end{aligned}$$\n:::\n\nHere, $p(D_j|D)$ can be defined as a uniform probability distribution\nover all items in a group, or when appropriate a popularity weighted\ndistribution over items can also be employed.\n\n      \\textbf{IG-D} &= \\frac{1}{|\\mathcal{G}_d|}\\frac{1}{|\\mathcal{U}|}\\sum_{D \\in \\mathcal{G}_d}\\sum_{i=1}^{|\\mathcal{U}|}\\left(\\sum_{j=1}^{|D|}p(D_j|D){\\mathsf{E}^\\delta}_{ij}\\right)^2\n\n\\textbf{IG-R} &= \\frac{1}{|\\mathcal{G}_d|}\\frac{1}{|\\mathcal{U}|}\\sum_{D \\in \\mathcal{G}_d}\\sum_{i=1}^{|\\mathcal{U}|}\\left(\\sum_{j=1}^{|D|}2p(D_j|D){\\mathsf{E}^\\delta}_{ij}{\\mathsf{E}^\\Delta}_{ij}\\right)^2", "description": "Computes and returns a set of performance metrics for a given system represented by energy matrices.\n\nArguments:\n- E_system: A tensor representing the system's energy values.\n- E_target: A tensor representing the target energy values.\n- E_collect: A tensor representing collected energy values for adjustments.\n- item_label: A tensor with labels for items used to compute metrics.\n- batch_indicator: A tensor indicating batch processing to segregate input data.\n\nModifications:\n- No global variables or class variables are modified.\n\nEffects:\n- Prints the time taken to compute the metrics - 'Time IGF: ' followed by the time duration.\n\nReturn Value:\n- A list containing three elements:\n  - metric: A scalar representing the computed metric based on energy differences normalized by the number of users and items.\n  - dis: A scalar indicating the disparity metric, normalized similarly.\n  - rel: A scalar representing a relevance metric, calculated from the interaction of system and target energies, with adjustments applied."}
{"paper_id": "2205.00048", "func_id": "3", "file": "src/utils/evaluation_functions/fairness_metrics.py", "name": "GG_F", "header_line": "88", "line_start": "89", "line_end": "127", "relevant_paper": "Having introduced group attributes for users and items separately, we\nnow change our focus to exposure disparities that emerge when we look at\ngroup attributes for both the users and items jointly. Using similar\nnotations as before, we can write:\n\n::: small\n$$\\begin{aligned}\n\\textbf{GG-F} &= \\frac{1}{|\\mathcal{G}_d|}\\frac{1}{|\\mathcal{G}_u|}\\sum_{D \\in \\mathcal{G}_d}\\sum_{U \\in \\mathcal{G}_u}\\left(p(\\epsilon|D,U)-p^*(\\epsilon|D,U)\\right)^2 \\label{eqn:metric-ggf1} \\\\\n&= \\frac{1}{|\\mathcal{G}_d|}\\frac{1}{|\\mathcal{G}_u|}\\sum_{D \\in \\mathcal{G}_d}\\sum_{U \\in \\mathcal{G}_u}\\left(\\sum_{j=1}^{|D|}\\sum_{i=1}^{|U|} p(D_j|D) p(U_i|U)(\\mathsf{E}_{ij}-\\mathsf{E}^*_{ij})\\right)^2. \\label{eqn:metric-ggf2}\n\\end{aligned}$$\n:::\n\nOf all six fairness metrics defined in this section, the GG-F metric is\nparticularly interesting as all the other metrics can be thought of\nspecific instances of GG-F. For example, if we define the group\nattributes for users in GG-F such that each group contains only one user\nand every user belongs to only one group then we recover the IG-F\nmetric. A similar trivial definition of groups on the item-side gives us\nthe GI-F metric. Consequently, if this trivial definition of groups is\napplied to both the users and items, we get the II-F metric. Another\ntrivial, but conceptually interesting, definition of the user group may\ninvolve a single group to which all users belong. Under this setting,\ndepending on group definition on the item-side, we can recover the AI-F\nand AG-F metrics that we describe next.\n\n      \\textbf{GG-D} &= \\frac{1}{|\\mathcal{G}_d|}\\frac{1}{|\\mathcal{G}_u|}\\sum_{D \\in \\mathcal{G}_d}\\sum_{U \\in \\mathcal{G}_u}\\left(\\sum_{j=1}^{|D|}\\sum_{i=1}^{|U|} p(D_j|D)  p(U_i|U){\\mathsf{E}^\\delta}_{ij}\\right)^2\n\n\\textbf{GG-R} &= \\frac{1}{|\\mathcal{G}_d|}\\frac{1}{|\\mathcal{G}_u|}\\sum_{D \\in \\mathcal{G}_d}\\sum_{U \\in \\mathcal{G}_u}\\left(\\sum_{j=1}^{|D|}\\sum_{i=1}^{|U|} 2  p(D_j|D)  p(U_i|U){\\mathsf{E}^\\delta}_{ij}{\\mathsf{E}^\\Delta}_{ij}\\right)^2", "description": "Performs calculations on two sets of labels and energy matrices to derive metrics and matrices related to the system's and target's performance. \n\n:global modifies GG_target_matrix: Populates with values derived from E_target_raw matrix for each user-item pair.\n:global modifies GG_system_matrix: Populates with values derived from E_system_raw matrix for each user-item pair.\n:global modifies GG_coll_matrix: Populates with values derived from E_collect matrix for each user-item pair.\n:effects: \n    - Prints the time taken for the entire computation process with the message 'Time GGF: ' followed by the elapsed time.\n:returns: \n    - metric: A scalar value representing the computed metric of differences weighted by number of user-item interactions.\n    - dis: A scalar value representing the computed dissimilarity measure.\n    - rel: A scalar value representing a computed relevance score, adjusted for user-item interactions.\n    - GG_target_matrix: A 2D tensor containing computed values based on E_target_raw for each user-item interaction.\n    - GG_system_matrix: A 2D tensor containing computed values based on E_system_raw for each user-item interaction.\n    - GG_coll_matrix: A 2D tensor containing computed values based on E_collect for each user-item interaction.\n\nNote: The function relies on the following inputs assumed to be defined in the surrounding scope:\n- E_system_raw: A tensor representing the raw system energy matrix.\n- E_collect: A tensor denoting collected energy for adjustments.\n- E_target_raw: A tensor representing the raw target energy matrix.\n- user_label and item_label: Tensors representing labels for users and items, respectively.\n- batch_indicator: A tensor indicating batch processing details for the matrix operations.\n\nEach `*_matrix` tensor is initialized to zeros with dimensions based on the number of user and item labels and populated during matrix operations."}
{"paper_id": "2205.00048", "func_id": "4", "file": "src/utils/evaluation_functions/fairness_metrics.py", "name": "AI_F", "header_line": "130", "line_start": "131", "line_end": "149", "relevant_paper": "A recommender system may systemically under or over expose an item to\nall users. To quantify this kind of systemic disparities we define the\nAI-F metric which computes the mean deviation between overall system\nexposure $p(\\epsilon|d)$ and target exposure $p^*(\\epsilon|d)$ for\nitems:\n\n::: small\n$$\\begin{aligned}\n\\textbf{AI-F} &= \\frac{1}{|\\mathcal{D}|}\\sum_{d \\in \\mathcal{D}}\\left(p(\\epsilon|d)-p^*(\\epsilon|d)\\right)^2 \\label{eqn:metric-aif1} \\\\\n&= \\sum_{j=1}^{|\\mathcal{D}|}\\left(\\sum_{i=1}^{|\\mathcal{U}|} p(\\mathcal{U}_i)(\\mathsf{E}_{ij}-\\mathsf{E}^*_{ij})\\right)^2. \\label{eqn:metric-aif2}\n\\end{aligned}$$\n:::\n\nAs earlier, $p(\\mathcal{U}_i)$ can either be uniform or weighted by\nusage.\n\n      \\textbf{AI-D} &= \\sum_{j=1}^{|\\mathcal{D}|}\\left(\\sum_{i=1}^{|\\mathcal{U}|} p(\\mathcal{U}_i){\\mathsf{E}^\\delta}_{ij}\\right)^2                                                                                           \n\n\\textbf{AI-R} &= \\sum_{j=1}^{|\\mathcal{D}|}\\left(\\sum_{i=1}^{|\\mathcal{U}|} 2 p(\\mathcal{U}_i){\\mathsf{E}^\\delta}_{ij}{\\mathsf{E}^\\Delta}_{ij}\\right)^2", "description": "Calculates and returns three metrics: metric, dis, and rel, based on the provided energy system and target matrices, \nwith a consideration of batch indicators to weigh contributions.\n\n:param E_system: A 2D numpy array (matrix) representing the energy system with shape (num_user, num_item).\n:param E_target: A 2D numpy array (matrix) representing the target energy values with shape (num_user, num_item).\n:param E_collect: A value to subtract from both E_system and E_target, updating them in-place.\n:param batch_indicator: A 2D numpy array (matrix) the same shape as E_system and E_target, used to indicate the \n                        relevance of each element in computations.\n\n:modifies: E_system and E_target by subtracting E_collect.\n\n:effects: Prints the time taken for the execution of key parts of the computation labeled \"Time AIF\".\n\n:return: A list containing three computed metrics:\n         - metric: A single float value representing the squared average difference between the adjusted energy \n                   system and target matrices, normalized by the number of items.\n         - dis: A single float value representing the squared average sum of the energy system elements,\n                normalized by the number of items.\n         - rel: A single float value representing a doubled average product of the adjusted energy system and \n                target matrices, normalized by the square of num and the number of items."}
{"paper_id": "2205.00048", "func_id": "5", "file": "src/utils/evaluation_functions/fairness_metrics.py", "name": "AG_F", "header_line": "152", "line_start": "153", "line_end": "177", "relevant_paper": "Finally, the AG-F metric is concerned with systemic under or over\nexposure of groups of items to all users and is defined as follows:\n\n::: small\n$$\\begin{aligned}\n\\textbf{AG-F} &= \\frac{1}{|\\mathcal{G}_d|}\\sum_{D \\in \\mathcal{G}_d}\\left(p(\\epsilon|D)-p^*(\\epsilon|D)\\right)^2 \\label{eqn:metric-agf1} \\\\\n&= \\frac{1}{|\\mathcal{G}_d|}\\sum_{D \\in \\mathcal{G}_d}\\left(\\sum_{j=1}^{|D|}\\sum_{i=1}^{|\\mathcal{U}|} p(D_j|D)  p(\\mathcal{U}_i)(\\mathsf{E}_{ij}-\\mathsf{E}^*_{ij})\\right)^2. \\label{eqn:metric-agf2}\n\\end{aligned}$$\n:::\n\n      \\textbf{AG-D} &= \\frac{1}{|\\mathcal{G}_d|}\\sum_{D \\in \\mathcal{G}_d}\\left(\\sum_{j=1}^{|D|}\\sum_{i=1}^{|\\mathcal{U}|} p(D_j|D)  p(\\mathcal{U}_i){\\mathsf{E}^\\delta}_{ij}\\right)^2\n\n\\textbf{AG-R} &= \\frac{1}{|\\mathcal{G}_d|}\\sum_{D \\in \\mathcal{G}_d}\\left(\\sum_{j=1}^{|D|}\\sum_{i=1}^{|\\mathcal{U}|} 2 p(D_j|D)  p(\\mathcal{U}_i){\\mathsf{E}^\\delta}_{ij}{\\mathsf{E}^\\Delta}_{ij}\\right)^2", "description": "Calculates performance metrics based on system and target energies and various indicators.\n\n:param E_system: A matrix representing the system energy values.\n:param E_target: A matrix representing the target energy values.\n:param E_collect: A value to be subtracted from both E_system and E_target.\n:param item_label: A binary or multi-valued matrix indicating item attributes or categorizations.\n:param batch_indicator: A matrix indicating which elements are included in the current batch of items.\n:modifies: E_system, E_target as they are adjusted by subtracting E_collect.\n:effects: Prints the time taken to execute the function with the label 'Time AGF: '.\n:return: A list containing three performance metrics - [metric, dis, rel], computed based on the input energy matrices and indicators."}
{"paper_id": "2205.00048", "func_id": "6", "file": "src/utils/evaluation_functions/stochastic.py", "name": "eval_function_stochas", "header_line": "10", "line_start": "11", "line_end": "44", "relevant_paper": "", "description": "Evaluates various metrics related to a recommender system and returns calculated metric values.\n\nThis function constructs and evaluates several metrics used for evaluating recommender systems. \nThe metrics are evaluated using inputs including user-item interaction data and an optional normalization step.\n\n:param args: An object containing various parameters necessary for computation, including normalization flag ('norm'). \n:param matrix_label: A numpy array representing the labels or interactions between users and items.\n:param save_df: A pandas DataFrame containing 'item' and 'score' columns, representing item IDs and corresponding scores.\n:param user_label: A numpy array or tensor representing user-specific labels.\n:param item_label: A numpy array or tensor representing item-specific labels.\n:param rand_tau: A float value used as temperature in the softmax function during weight calculation.\n\n:modifies: None directly, but utilizes torch for tensor conversion and updates local variables.\n\n:effects: \n- Prints the length of the 'item' column in the DataFrame `save_df`.\n- Prints the shape of the reshaped numpy arrays `top_item_id` and `top_score`.\n- Prints \"Metric evaluation complete\" upon the completion of metric calculations.\n\n:return: \n- `IIF_all`: Metric value representing a particular interaction-focused evaluation.\n- `GIF_all`: Metric value representing user-centric interaction analysis.\n- `IGF_all`: Metric value representing item-centric evaluation.\n- `GGF_all`: Metric value concerning both user and item-centric evaluation.\n- `AIF_all`: General metric representing additional interaction focus analysis.\n- `AGF_all`: Another general metric focusing on item-specific evaluations."}
{"paper_id": "2205.00048", "func_id": "7", "file": "src/utils/evaluation_functions/static.py", "name": "eval_function_static", "header_line": "9", "line_start": "10", "line_end": "34", "relevant_paper": "", "description": "Performs a series of calculations related to exposure systems and fairness metrics for a given set of input data, and returns multiple fairness metric scores.\n\n:param args: A set of arguments required for calculating E_target, E_collect, and related computations. The specific structure and contents of args are not detailed here, but should be suitable for the function signatures of calc_E_target, build_E_collect, and calc_E_system. \n:param matrix_label: A matrix or array representing labels used for calculating the number of relevant items (num_rel) and potentially for further calculations in calc_E_target.\n:param save_df: A DataFrame containing an 'item' column which provides item IDs. These IDs are grouped into arrays of 100 for determining top items.\n:param user_label: User-related labels or identifiers required for calculating certain fairness metrics (GIF, GGF).\n:param item_label: Item-related labels or identifiers required for calculating certain fairness metrics (IGF, AGF, GGF).\n\n:modifies: None. The function does not modify any external or global variables or state.\n\n:effects: The function does not have any side effects such as printing or logging.\n\n:return: A tuple of six fairness metric scores (IIF, GIF, IGF, GGF, AIF, AGF) calculated based on the exposure system metrics and input labels. Each of these values holds a different aspect of fairness evaluation for the given exposure system."}
